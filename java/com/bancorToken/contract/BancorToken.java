package com.bancorToken.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.2.0.
 */
public class BancorToken extends Contract {
    private static final String BINARY = "0x60806040526001805460ff60a01b191690556006805464ffffffffff60c01b19169055600d805460ff191690553480156200003957600080fd5b5060405162002e3e38038062002e3e833981810160405260c08110156200005f57600080fd5b81019080805160405193929190846401000000008211156200008057600080fd5b9083019060208201858111156200009657600080fd5b8251640100000000811182820188101715620000b157600080fd5b82525081516020918201929091019080838360005b83811015620000e0578181015183820152602001620000c6565b50505050905090810190601f1680156200010e5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200013257600080fd5b9083019060208201858111156200014857600080fd5b82516401000000008111828201881017156200016357600080fd5b82525081516020918201929091019080838360005b838110156200019257818101518382015260200162000178565b50505050905090810190601f168015620001c05780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151600080546001600160a01b031916331790558751929550909350906200023a576040805162461bcd60e51b815260206004820152601060248201526f4552525f494e56414c49445f4e414d4560801b604482015290519081900360640190fd5b600085511162000286576040805162461bcd60e51b815260206004820152601260248201527111549497d253959053125117d4d6535093d360721b604482015290519081900360640190fd5b60018163ffffffff1610158015620002a75750620f42408163ffffffff1611155b620002ee576040805162461bcd60e51b815260206004820152601260248201527111549497d49154d154959157d5d15251d21560721b604482015290519081900360640190fd5b85516200030390600e9060208901906200038a565b5084516200031990600f9060208801906200038a565b506010805460ff191660ff959095169490941790935560118290556006805463ffffffff60a01b1916600160a01b63ffffffff90951694909402939093176001600160a01b0319166001600160a01b0391909116179091553360009081526012602052604090205550620004269050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003cd57805160ff1916838001178555620003fd565b82800160010185558215620003fd579182015b82811115620003fd578251825591602001919060010190620003e0565b506200040b9291506200040f565b5090565b5b808211156200040b576000815560010162000410565b612a0880620004366000396000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c80638e72b23f1161015c578063ca401469116100ce578063ecbca55d11610087578063ecbca55d14610737578063f2fde38b1461075a578063f4325d6714610780578063f856f33614610788578063f90bb74014610790578063feef143f146107985761028a565b8063ca401469146106a5578063d4ee1d90146106ad578063d8a21847146106b5578063d8dbe4c9146106db578063dc9b03e414610701578063dd62ed3e146107095761028a565b8063a10954fe11610120578063a10954fe14610618578063a238e97914610620578063a24835d11461063d578063a89ae4ba14610669578063a9059cbb14610671578063b39e12cf1461069d5761028a565b80638e72b23f146105885780639100b5dd146105ae57806395d89b41146105b65780639bbe15d6146105be5780639d0132a9146106105761028a565b80634eef3f311161020057806372bb8ede116101b957806372bb8ede1461052857806378640aa31461053057806379ba50971461054d57806380f80a42146105555780638129fc1c146105785780638da5cb5b146105805761028a565b80634eef3f3114610494578063579cd3ca146104b8578063653300d7146104c0578063694ff0f2146104f25780636e3f71c2146104fa57806370a08231146105025761028a565b806318160ddd1161025257806318160ddd146103f057806323b872dd1461040a5780632538576f146104405780632fc7001c14610448578063313ce567146104505780634c69c00f1461046e5761028a565b806306552ff31461028f57806306fdde03146102cf5780630759090b1461034c578063079a54c11461036d578063095ea7b3146103b0575b600080fd5b6102cd600480360360808110156102a557600080fd5b506001600160a01b0381358116916020810135821691604082013581169160600135166107a0565b005b6102d761089c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103115781810151838201526020016102f9565b50505050905090810190601f16801561033e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61035461092a565b6040805163ffffffff9092168252519081900360200190f35b6102cd600480360360a081101561038357600080fd5b5063ffffffff81358116916020810135821691604082013581169160608101359160809091013516610936565b6103dc600480360360408110156103c657600080fd5b506001600160a01b038135169060200135610ba0565b604080519115158252519081900360200190f35b6103f8610c14565b60408051918252519081900360200190f35b6103dc6004803603606081101561042057600080fd5b506001600160a01b03813581169160208101359091169060400135610c1a565b610354610d19565b6102cd610d2c565b610458610f71565b6040805160ff9092168252519081900360200190f35b6102cd6004803603602081101561048457600080fd5b50356001600160a01b0316610f7a565b61049c610faf565b604080516001600160a01b039092168252519081900360200190f35b610354610fbe565b6103f8600480360360408110156104d657600080fd5b50803563ffffffff1690602001356001600160a01b0316610fd1565b6102cd610fee565b6102cd6112e7565b6103f86004803603602081101561051857600080fd5b50356001600160a01b031661151b565b6102cd61152d565b6103dc6004803603602081101561054657600080fd5b50356118d2565b6102cd611ddc565b6102cd6004803603602081101561056b57600080fd5b503563ffffffff16611e93565b6103dc611f6f565b61049c611f7f565b6102cd6004803603602081101561059e57600080fd5b50356001600160a01b0316611f8e565b610354611fc3565b6102d7611fcf565b6105e1600480360360208110156105d457600080fd5b503563ffffffff1661202a565b604080519586526020860194909452848401929092521515606084015215156080830152519081900360a00190f35b6103dc61205d565b6103f861206d565b6102cd6004803603602081101561063657600080fd5b50356120e9565b6103dc6004803603604081101561065357600080fd5b506001600160a01b038135169060200135612146565b61049c612208565b6103dc6004803603604081101561068757600080fd5b506001600160a01b038135169060200135612217565b61049c6122b6565b61049c6122c5565b61049c6122d4565b6102cd600480360360208110156106cb57600080fd5b50356001600160a01b03166122e3565b6102cd600480360360208110156106f157600080fd5b50356001600160a01b0316612318565b6103f861234d565b6103f86004803603604081101561071f57600080fd5b506001600160a01b0381358116916020013516612353565b6102cd6004803603602081101561074d57600080fd5b503563ffffffff16612370565b6102cd6004803603602081101561077057600080fd5b50356001600160a01b0316612449565b61049c6124c7565b6103546124d6565b6103546124ea565b6103f86124fd565b6107a8612503565b600d805460ff191660011790556107bd612555565b600154600160a01b900460ff161561080b576040805162461bcd60e51b815260206004820152600c60248201526b11549497d21054d7d253925560a21b604482015290519081900360640190fd5b610814846125a8565b61081d836125a8565b610826826125a8565b61082f816125a8565b6001805460ff60a01b1916600160a01b179055600380546001600160a01b039586166001600160a01b0319918216179091556004805494861694821694909417909355600280549285169284169290921790915560058054919093169116179055600d805460ff19169055565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b505050505081565b60085463ffffffff1681565b61093e612503565b600d805460ff1916600190811790915554600160a01b900460ff166109a0576040805162461bcd60e51b815260206004820152601360248201527211549497d393d517d253925512505312569151606a1b604482015290519081900360640190fd5b6003546001600160a01b031633146109ed576040805162461bcd60e51b815260206004820152601960248201526000805160206129b3833981519152604482015290519081900360640190fd5b600654600160e01b900460ff1615610a42576040805162461bcd60e51b815260206004820152601360248201527211549497d414925590551157d1539050931151606a1b604482015290519081900360640190fd5b60018363ffffffff1610158015610a60575060648363ffffffff1611155b610aa3576040805162461bcd60e51b815260206004820152600f60248201526e4552525f4f50504f45535f5241544560881b604482015290519081900360640190fd5b60018163ffffffff1610158015610ac35750620f42408163ffffffff1611155b610b09576040805162461bcd60e51b815260206004820152601260248201527111549497d49154d154959157d5d15251d21560721b604482015290519081900360640190fd5b60068054436007556008805463ffffffff968716600160401b026bffffffff0000000000000000199888166401000000000267ffffffff00000000199a891663ffffffff19909316929092179990991617969096169690961790945560099190915516600160a01b0263ffffffff60a01b1960ff60e01b19909316600160e01b1792909216919091179055600d805460ff19169055565b600082610bac816125a8565b3360008181526013602090815260408083206001600160a01b03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60115481565b600083610c26816125a8565b83610c30816125a8565b6001600160a01b0386166000908152601360209081526040808320338452909152902054610c5e90856125fc565b6001600160a01b038716600081815260136020908152604080832033845282528083209490945591815260129091522054610c9990856125fc565b6001600160a01b038088166000908152601260205260408082209390935590871681522054610cc89085612649565b6001600160a01b0380871660008181526012602090815260409182902094909455805188815290519193928a169260008051602061297383398151915292918290030190a350600195945050505050565b600854600160401b900463ffffffff1681565b600154600160a01b900460ff168015610d4e5750600654600160e01b900460ff165b610d8d576040805162461bcd60e51b815260206004820152601e6024820152600080516020612993833981519152604482015290519081900360640190fd5b600a54600163ffffffff9091161015610de2576040805162461bcd60e51b815260206004820152601260248201527111549497d593d51157d393d517d4d510549560721b604482015290519081900360640190fd5b600a5463ffffffff166000908152600b602052604090206003015460ff1615610e49576040805162461bcd60e51b815260206004820152601460248201527311549497d593d51157d41550931250d25512515160621b604482015290519081900360640190fd5b600a5463ffffffff166000908152600b6020526040902060010154431115610ea7576040805162461bcd60e51b815260206004820152600c60248201526b11549497d593d51157d1539160a21b604482015290519081900360640190fd5b600a5463ffffffff166000908152600c60209081526040808320338452909152902054610f0b576040805162461bcd60e51b815260206004820152600d60248201526c11549497d393d517d593d51151609a1b604482015290519081900360640190fd5b600a805463ffffffff9081166000908152600c602090815260408083203384528252808320805490849055945484168352600b909152902060020154610f539183906125fc16565b600a5463ffffffff166000908152600b602052604090206002015550565b60105460ff1681565b610f82612555565b80610f8c816125a8565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b600654600160c01b900463ffffffff1681565b600c60209081526000928352604080842090915290825290205481565b610ff6612503565b600d805460ff1916600190811790915554600160a01b900460ff1680156110265750600654600160e01b900460ff165b611065576040805162461bcd60e51b815260206004820152601e6024820152600080516020612993833981519152604482015290519081900360640190fd5b6003546001600160a01b031633146110b2576040805162461bcd60e51b815260206004820152601960248201526000805160206129b3833981519152604482015290519081900360640190fd5b6008546007546110cb9163ffffffff9081169061264916565b4311611114576040805162461bcd60e51b81526020600482015260136024820152724552525f4e4f545f4352454154455f564f544560681b604482015290519081900360640190fd5b600a54600163ffffffff9091161061119557600a5463ffffffff166000908152600b602052604090206003015460ff16611195576040805162461bcd60e51b815260206004820152601b60248201527f4552525f4c4153545f564f54455f4e4f545f5055424c49434954590000000000604482015290519081900360640190fd5b600a5463ffffffff908116600101166000908152600b6020526040902054156111f6576040805162461bcd60e51b815260206004820152600e60248201526d22a9292fab27aa22afa122a3a4a760911b604482015290519081900360640190fd5b600a805463ffffffff198116600163ffffffff92831681018316919091178084556040805160a08101825243808252600854640100000000900486168101602080840191825260008486018181526060860182815260808701838152988b168352600b8452918790209551865592519785019790975590516002840155945160039092018054945160ff199095169215159290921761ff00191661010094151594909402939093179055935484519182529092169082015281517f34d5875be1c60944562227739f50eafe56e55e1098e0150b1cc441d97fc1072e929181900390910190a1600d805460ff19169055565b600154600160a01b900460ff1680156113095750600654600160e01b900460ff165b611348576040805162461bcd60e51b815260206004820152601e6024820152600080516020612993833981519152604482015290519081900360640190fd5b600a54600163ffffffff909116101561139d576040805162461bcd60e51b815260206004820152601260248201527111549497d593d51157d393d517d4d510549560721b604482015290519081900360640190fd5b600a5463ffffffff166000908152600b602052604090206003015460ff1615611404576040805162461bcd60e51b815260206004820152601460248201527311549497d593d51157d41550931250d25512515160621b604482015290519081900360640190fd5b600a5463ffffffff166000908152600b6020526040902060010154431115611462576040805162461bcd60e51b815260206004820152600c60248201526b11549497d593d51157d1539160a21b604482015290519081900360640190fd5b600a5463ffffffff166000908152600c60209081526040808320338452909152902054156114c7576040805162461bcd60e51b815260206004820152600d60248201526c11549497d21054d7d593d51151609a1b604482015290519081900360640190fd5b33600081815260126020908152604080832054600a805463ffffffff9081168652600c85528386209686529584528285208290555485168452600b909252909120600201549091610f539190839061264916565b60126020526000908152604090205481565b611535612503565b600d805460ff1916600190811790915554600160a01b900460ff1680156115655750600654600160e01b900460ff165b6115a4576040805162461bcd60e51b815260206004820152601e6024820152600080516020612993833981519152604482015290519081900360640190fd5b6003546001600160a01b031633146115f1576040805162461bcd60e51b815260206004820152601960248201526000805160206129b3833981519152604482015290519081900360640190fd5b600a54600163ffffffff9091161015611646576040805162461bcd60e51b815260206004820152601260248201527111549497d593d51157d393d517d4d510549560721b604482015290519081900360640190fd5b600a5463ffffffff166000908152600b602052604090206001015443116116a7576040805162461bcd60e51b815260206004820152601060248201526f11549497d593d51157d393d517d1539160821b604482015290519081900360640190fd5b600a5463ffffffff166000908152600b602052604090206003015460ff161561170e576040805162461bcd60e51b815260206004820152601460248201527311549497d593d51157d41550931250d25512515160621b604482015290519081900360640190fd5b601154600a5463ffffffff9081166000908152600b6020526040812060038101805460ff191660011790556008549092611755918591600160401b90910481169061269916565b6002830154611765906064612699565b109050600061177261206d565b9050811561185557600654600480546040805163a9059cbb60e01b81526001600160a01b0392831693810193909352602483018590525192169163a9059cbb916044808201926020929091908290030181600087803b1580156117d457600080fd5b505af11580156117e8573d6000803e3d6000fd5b505050506040513d60208110156117fe57600080fd5b5051611847576040805162461bcd60e51b815260206004820152601360248201527211549497d514905394d1915497d19052531151606a1b604482015290519081900360640190fd5b6006805460ff60e01b191690555b600383018054831515610100810261ff001990921691909117909155600a546040805143815263ffffffff9092166020830152818101929092526060810183905290517ff71f0830db2bae33646df6874c23d50dff7d80d15a5a5bc8672c14d0aaadd9449181900360800190a15050600d805460ff191690555050565b600154600090600160a01b900460ff1680156118f75750600654600160e01b900460ff165b611936576040805162461bcd60e51b815260206004820152601e6024820152600080516020612993833981519152604482015290519081900360640190fd5b60095461194161206d565b10611993576040805162461bcd60e51b815260206004820152601e60248201527f4552525f505249564154455f4558434550545f4c494d49545f544f4b454e0000604482015290519081900360640190fd5b600654604080516370a0823160e01b8152336004820152905184926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156119dd57600080fd5b505afa1580156119f1573d6000803e3d6000fd5b505050506040513d6020811015611a0757600080fd5b50511015611a53576040805162461bcd60e51b815260206004820152601460248201527322a9292fa727aa2fa2a727aaa3a42faa27a5a2a760611b604482015290519081900360640190fd5b60065460408051636eb1769f60e11b8152336004820152306024820152905184926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b158015611aa357600080fd5b505afa158015611ab7573d6000803e3d6000fd5b505050506040513d6020811015611acd57600080fd5b50511015611b1b576040805162461bcd60e51b81526020600482015260166024820152754552525f4e4f545f454e4f5547485f415050524f564560501b604482015290519081900360640190fd5b600080611b27846126f7565b915091508160001415611b79576040805162461bcd60e51b815260206004820152601560248201527411549497d6915493d7d513d2d15397d05353d55395605a1b604482015290519081900360640190fd5b6000611b8361206d565b600654604080516323b872dd60e01b81523360048201523060248201526044810189905290519293506001600160a01b03909116916323b872dd916064808201926020929091908290030181600087803b158015611be057600080fd5b505af1158015611bf4573d6000803e3d6000fd5b505050506040513d6020811015611c0a57600080fd5b5051611c5d576040805162461bcd60e51b815260206004820152601a60248201527f4552525f5452414e534645525f524553455256455f544f4b454e000000000000604482015290519081900360640190fd5b84611c7082611c6a61206d565b906125fc565b1015611cb8576040805162461bcd60e51b815260206004820152601260248201527111549497d253959053125117d05353d5539560721b604482015290519081900360640190fd5b611cd782611cd18560115461264990919063ffffffff16565b90612649565b60115533600090815260126020526040902054611cf49084612649565b336000908152601260205260408082209290925580546001600160a01b031681522054611d219083612649565b600080546001600160a01b0316815260126020908152604091829020929092558051858152918201849052805133927fce8ec54cce3ede35ce211fe143d4dc01e2d84c73854868b9c293d6b7f20682d892908290030190a260408051848152905133916000916000805160206129738339815191529181900360200190a3600080546040805185815290516001600160a01b0390921692916000805160206129738339815191529181900360200190a3506001949350505050565b6001546001600160a01b03163314611e2f576040805162461bcd60e51b815260206004820152601160248201527011549497d050d0d154d4d7d11153925151607a1b604482015290519081900360640190fd5b600154600080546040516001600160a01b0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6003546001600160a01b03163314611ee0576040805162461bcd60e51b815260206004820152601960248201526000805160206129b3833981519152604482015290519081900360640190fd5b60018163ffffffff1610158015611f005750620f42408163ffffffff1611155b611f49576040805162461bcd60e51b815260206004820152601560248201527411549497d0d3d395915494d253d397d5d15251d215605a1b604482015290519081900360640190fd5b6006805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b600154600160a01b900460ff1681565b6000546001600160a01b031681565b611f96612555565b80611fa0816125a8565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b600a5463ffffffff1681565b600f805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109225780601f106108f757610100808354040283529160200191610922565b600b6020526000908152604090208054600182015460028301546003909301549192909160ff8082169161010090041685565b600654600160e01b900460ff1681565b600654604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156120b857600080fd5b505afa1580156120cc573d6000803e3d6000fd5b505050506040513d60208110156120e257600080fd5b5051905090565b6003546001600160a01b03163314612136576040805162461bcd60e51b815260206004820152601960248201526000805160206129b3833981519152604482015290519081900360640190fd5b80612140816128a2565b50600955565b6000612150612555565b6001600160a01b03831660009081526012602052604090205461217390836125fc565b6001600160a01b03841660009081526012602052604090205560115461219990836125fc565b6011556040805183815290516000916001600160a01b038616916000805160206129738339815191529181900360200190a36040805183815290517f9a1b418bc061a5d80270261562e6986a35d995f8051145f277be16103abd34539181900360200190a15060015b92915050565b6002546001600160a01b031681565b600082612223816125a8565b3360009081526012602052604090205461223d90846125fc565b33600090815260126020526040808220929092556001600160a01b038616815220546122699084612649565b6001600160a01b0385166000818152601260209081526040918290209390935580518681529051919233926000805160206129738339815191529281900390910190a35060019392505050565b6003546001600160a01b031681565b6005546001600160a01b031681565b6001546001600160a01b031681565b6122eb612555565b806122f5816125a8565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b612320612555565b8061232a816125a8565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b60075481565b601360209081526000928352604080842090915290825290205481565b6003546001600160a01b031633146123bd576040805162461bcd60e51b815260206004820152601960248201526000805160206129b3833981519152604482015290519081900360640190fd5b60018163ffffffff16101580156123dd5750620f42408163ffffffff1611155b612423576040805162461bcd60e51b81526020600482015260126024820152714552525f434f4e56455253494f4e5f46454560701b604482015290519081900360640190fd5b6006805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b612451612555565b6000546001600160a01b03828116911614156124a5576040805162461bcd60e51b815260206004820152600e60248201526d22a9292fa9a0a6a2afa7aba722a960911b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031681565b600854640100000000900463ffffffff1681565b600654600160a01b900463ffffffff1681565b60095481565b600d5460ff1615612553576040805162461bcd60e51b815260206004820152601560248201527411549493d497d491515514905390d657d1d5505491605a1b604482015290519081900360640190fd5b565b6000546001600160a01b03163314612553576040805162461bcd60e51b815260206004820152601160248201527011549497d050d0d154d4d7d11153925151607a1b604482015290519081900360640190fd5b6001600160a01b0381166125f9576040805162461bcd60e51b81526020600482015260136024820152724552525f494e56414c49445f4144445245535360681b604482015290519081900360640190fd5b50565b600081831015612643576040805162461bcd60e51b815260206004820152600d60248201526c4552525f554e444552464c4f5760981b604482015290519081900360640190fd5b50900390565b600082820183811015612692576040805162461bcd60e51b815260206004820152600c60248201526b4552525f4f564552464c4f5760a01b604482015290519081900360640190fd5b9392505050565b6000826126a857506000612202565b828202828482816126b557fe5b0414612692576040805162461bcd60e51b815260206004820152600c60248201526b4552525f4f564552464c4f5760a01b604482015290519081900360640190fd5b600080600080600260009054906101000a90046001600160a01b03166001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561274d57600080fd5b505af1158015612761573d6000803e3d6000fd5b505050506040513d602081101561277757600080fd5b50516011549091506127b8576006546127b19063ffffffff600160a01b9091048116906127ab908890620f42409061269916565b906128e8565b9150612868565b6005546011546001600160a01b039091169063f3250fe2906127d861206d565b6006546040805160e086901b6001600160e01b031916815260048101949094526024840192909252600160a01b900463ffffffff16604483015260648201899052516084808301926020929190829003018186803b15801561283957600080fd5b505afa15801561284d573d6000803e3d6000fd5b505050506040513d602081101561286357600080fd5b505191505b6000612879601a6127ab8885612699565b9050808310612886578092505b600061289184612947565b938490039550929350505050915091565b600081116125f9576040805162461bcd60e51b815260206004820152600e60248201526d4552525f5a45524f5f56414c554560901b604482015290519081900360640190fd5b6000808211612933576040805162461bcd60e51b81526020600482015260126024820152714552525f4449564944455f42595f5a45524f60701b604482015290519081900360640190fd5b600082848161293e57fe5b04949350505050565b60065460009061220290620f4240906127ab908590600160c01b900463ffffffff908116906126991656feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef4552525f4e4f545f494e495449414c495a45445f414e445f454e41424c4500004552525f4143434553535f44454e4945445f4f4e4c595f434d00000000000000a2646970667358221220a09f529c9c391d59a074cc8c272c944fcd213f909d798dec67007021314a708464736f6c634300060c0033";

    public static final String FUNC_ACCEPTOWNERSHIP = "acceptOwnership";

    public static final String FUNC_ALLOWANCE = "allowance";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_BANCORFORMULA = "bancorFormula";

    public static final String FUNC_CONTRACTMANAGER = "contractManager";

    public static final String FUNC_CONVERSIONFEE = "conversionFee";

    public static final String FUNC_CONVERSIONWEIGHT = "conversionWeight";

    public static final String FUNC_CURRENTVOTEID = "currentVoteId";

    public static final String FUNC_DECIMALS = "decimals";

    public static final String FUNC_EXPECTPRIVATERESERVETOKEN = "expectPrivateReserveToken";

    public static final String FUNC_FINANCIALMANAGER = "financialManager";

    public static final String FUNC_INITIALIZE = "initialize";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_NEWOWNER = "newOwner";

    public static final String FUNC_ORACLEADDRESS = "oracleAddress";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PRIVATEENABLE = "privateEnable";

    public static final String FUNC_PRIVATEPERIODBLOCK = "privatePeriodBlock";

    public static final String FUNC_PRIVATESTARTBLOCK = "privateStartBlock";

    public static final String FUNC_RESERVETOKEN = "reserveToken";

    public static final String FUNC_SETBANCORFORMULA = "setBancorFormula";

    public static final String FUNC_SETCONTRACTMANAGER = "setContractManager";

    public static final String FUNC_SETCONVERSIONFEE = "setConversionFee";

    public static final String FUNC_SETCONVERSIONWEIGHT = "setConversionWeight";

    public static final String FUNC_SETEXPECTPRIVATERESERVETOKEN = "setExpectPrivateReserveToken";

    public static final String FUNC_SETFINANCIALMANAGER = "setFinancialManager";

    public static final String FUNC_SETORACLEADDRESS = "setOracleAddress";

    public static final String FUNC_SYMBOL = "symbol";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_VOTEDETAIL = "voteDetail";

    public static final String FUNC_VOTELIST = "voteList";

    public static final String FUNC_VOTEOPPOSERATE = "voteOpposeRate";

    public static final String FUNC_VOTEPERIODBLOCK = "votePeriodBlock";

    public static final String FUNC_INIT = "init";

    public static final String FUNC_STARTPRIVATEPLACEMENT = "startPrivatePlacement";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_TRANSFERFROM = "transferFrom";

    public static final String FUNC_APPROVE = "approve";

    public static final String FUNC_DESTROY = "destroy";

    public static final String FUNC_RESERVEBALANCE = "reserveBalance";

    public static final String FUNC_ISSUEBYBANCOR = "issueByBancor";

    public static final String FUNC_CREATEVOTE = "createVote";

    public static final String FUNC_PUBLICIZEVOTE = "publicizeVote";

    public static final String FUNC_OPPOSEVOTE = "opposeVote";

    public static final String FUNC_UNDOOPPOSEVOTE = "undoOpposeVote";

    public static final Event APPROVAL_EVENT = new Event("Approval", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event DESTRUCTION_EVENT = new Event("Destruction", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event ISSUANCE_EVENT = new Event("Issuance", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event ISSUANCEBYBANCOR_EVENT = new Event("IssuanceByBancor", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event OWNERUPDATE_EVENT = new Event("OwnerUpdate", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event TRANSFER_EVENT = new Event("Transfer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event VOTECREATED_EVENT = new Event("VoteCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint32>() {}));
    ;

    public static final Event VOTEPUBLICIZE_EVENT = new Event("VotePublicize", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint32>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("42", "0x62438001B14114C9603e3ae844c7F8765fb74d86");
    }

    @Deprecated
    protected BancorToken(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected BancorToken(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected BancorToken(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected BancorToken(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._spender = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalEventResponse>() {
            @Override
            public ApprovalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVAL_EVENT, log);
                ApprovalEventResponse typedResponse = new ApprovalEventResponse();
                typedResponse.log = log;
                typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._spender = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
        return approvalEventFlowable(filter);
    }

    public List<DestructionEventResponse> getDestructionEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DESTRUCTION_EVENT, transactionReceipt);
        ArrayList<DestructionEventResponse> responses = new ArrayList<DestructionEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DestructionEventResponse typedResponse = new DestructionEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DestructionEventResponse> destructionEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DestructionEventResponse>() {
            @Override
            public DestructionEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DESTRUCTION_EVENT, log);
                DestructionEventResponse typedResponse = new DestructionEventResponse();
                typedResponse.log = log;
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DestructionEventResponse> destructionEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DESTRUCTION_EVENT));
        return destructionEventFlowable(filter);
    }

    public List<IssuanceEventResponse> getIssuanceEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ISSUANCE_EVENT, transactionReceipt);
        ArrayList<IssuanceEventResponse> responses = new ArrayList<IssuanceEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            IssuanceEventResponse typedResponse = new IssuanceEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<IssuanceEventResponse> issuanceEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, IssuanceEventResponse>() {
            @Override
            public IssuanceEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ISSUANCE_EVENT, log);
                IssuanceEventResponse typedResponse = new IssuanceEventResponse();
                typedResponse.log = log;
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<IssuanceEventResponse> issuanceEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ISSUANCE_EVENT));
        return issuanceEventFlowable(filter);
    }

    public List<IssuanceByBancorEventResponse> getIssuanceByBancorEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ISSUANCEBYBANCOR_EVENT, transactionReceipt);
        ArrayList<IssuanceByBancorEventResponse> responses = new ArrayList<IssuanceByBancorEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            IssuanceByBancorEventResponse typedResponse = new IssuanceByBancorEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._fee = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<IssuanceByBancorEventResponse> issuanceByBancorEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, IssuanceByBancorEventResponse>() {
            @Override
            public IssuanceByBancorEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ISSUANCEBYBANCOR_EVENT, log);
                IssuanceByBancorEventResponse typedResponse = new IssuanceByBancorEventResponse();
                typedResponse.log = log;
                typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._fee = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<IssuanceByBancorEventResponse> issuanceByBancorEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ISSUANCEBYBANCOR_EVENT));
        return issuanceByBancorEventFlowable(filter);
    }

    public List<OwnerUpdateEventResponse> getOwnerUpdateEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERUPDATE_EVENT, transactionReceipt);
        ArrayList<OwnerUpdateEventResponse> responses = new ArrayList<OwnerUpdateEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnerUpdateEventResponse typedResponse = new OwnerUpdateEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._prevOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnerUpdateEventResponse> ownerUpdateEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnerUpdateEventResponse>() {
            @Override
            public OwnerUpdateEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERUPDATE_EVENT, log);
                OwnerUpdateEventResponse typedResponse = new OwnerUpdateEventResponse();
                typedResponse.log = log;
                typedResponse._prevOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnerUpdateEventResponse> ownerUpdateEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERUPDATE_EVENT));
        return ownerUpdateEventFlowable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
        return transferEventFlowable(filter);
    }

    public List<VoteCreatedEventResponse> getVoteCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(VOTECREATED_EVENT, transactionReceipt);
        ArrayList<VoteCreatedEventResponse> responses = new ArrayList<VoteCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteCreatedEventResponse typedResponse = new VoteCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._block = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._voteId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VoteCreatedEventResponse> voteCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VoteCreatedEventResponse>() {
            @Override
            public VoteCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTECREATED_EVENT, log);
                VoteCreatedEventResponse typedResponse = new VoteCreatedEventResponse();
                typedResponse.log = log;
                typedResponse._block = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._voteId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VoteCreatedEventResponse> voteCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTECREATED_EVENT));
        return voteCreatedEventFlowable(filter);
    }

    public List<VotePublicizeEventResponse> getVotePublicizeEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(VOTEPUBLICIZE_EVENT, transactionReceipt);
        ArrayList<VotePublicizeEventResponse> responses = new ArrayList<VotePublicizeEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VotePublicizeEventResponse typedResponse = new VotePublicizeEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._block = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._voteId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._pass = (Boolean) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VotePublicizeEventResponse> votePublicizeEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VotePublicizeEventResponse>() {
            @Override
            public VotePublicizeEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTEPUBLICIZE_EVENT, log);
                VotePublicizeEventResponse typedResponse = new VotePublicizeEventResponse();
                typedResponse.log = log;
                typedResponse._block = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._voteId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._pass = (Boolean) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._amount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VotePublicizeEventResponse> votePublicizeEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTEPUBLICIZE_EVENT));
        return votePublicizeEventFlowable(filter);
    }

    public RemoteCall<TransactionReceipt> acceptOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ACCEPTOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> allowance(String param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ALLOWANCE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0), 
                new org.web3j.abi.datatypes.Address(param1)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> balanceOf(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BALANCEOF, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> bancorFormula() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BANCORFORMULA, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> contractManager() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CONTRACTMANAGER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> conversionFee() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CONVERSIONFEE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> conversionWeight() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CONVERSIONWEIGHT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> currentVoteId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CURRENTVOTEID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> decimals() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DECIMALS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> expectPrivateReserveToken() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXPECTPRIVATERESERVETOKEN, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> financialManager() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_FINANCIALMANAGER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> initialize() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INITIALIZE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_NAME, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> newOwner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_NEWOWNER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> oracleAddress() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ORACLEADDRESS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> privateEnable() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PRIVATEENABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> privatePeriodBlock() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PRIVATEPERIODBLOCK, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> privateStartBlock() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PRIVATESTARTBLOCK, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> reserveToken() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RESERVETOKEN, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setBancorFormula(String _bancorFormula) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBANCORFORMULA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_bancorFormula)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setContractManager(String _contractManager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCONTRACTMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_contractManager)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setConversionFee(BigInteger _conversionFee) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCONVERSIONFEE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(_conversionFee)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setConversionWeight(BigInteger _conversionWeight) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCONVERSIONWEIGHT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(_conversionWeight)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setExpectPrivateReserveToken(BigInteger _expectPrivateReserveToken) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETEXPECTPRIVATERESERVETOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_expectPrivateReserveToken)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setFinancialManager(String _financialManager) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFINANCIALMANAGER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_financialManager)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setOracleAddress(String _oracleAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETORACLEADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_oracleAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> symbol() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SYMBOL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> totalSupply() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOTALSUPPLY, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> transferOwnership(String _newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> voteDetail(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTEDETAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> voteList(BigInteger param0, String param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTELIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(param0), 
                new org.web3j.abi.datatypes.Address(param1)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> voteOpposeRate() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTEOPPOSERATE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> votePeriodBlock() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTEPERIODBLOCK, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> init(String _cm, String _fm, String _oracle, String _bancorFormula) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_cm), 
                new org.web3j.abi.datatypes.Address(_fm), 
                new org.web3j.abi.datatypes.Address(_oracle), 
                new org.web3j.abi.datatypes.Address(_bancorFormula)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> startPrivatePlacement(BigInteger _privatePeriodBlock, BigInteger _votePeriodblock, BigInteger _voteOpposeRate, BigInteger _expectPrivateReserveToken, BigInteger _weight) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_STARTPRIVATEPLACEMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(_privatePeriodBlock), 
                new org.web3j.abi.datatypes.generated.Uint32(_votePeriodblock), 
                new org.web3j.abi.datatypes.generated.Uint32(_voteOpposeRate), 
                new org.web3j.abi.datatypes.generated.Uint256(_expectPrivateReserveToken), 
                new org.web3j.abi.datatypes.generated.Uint32(_weight)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> transfer(String _to, BigInteger _value) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_to), 
                new org.web3j.abi.datatypes.generated.Uint256(_value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> transferFrom(String _from, String _to, BigInteger _value) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERFROM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_from), 
                new org.web3j.abi.datatypes.Address(_to), 
                new org.web3j.abi.datatypes.generated.Uint256(_value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> approve(String _spender, BigInteger _value) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_spender), 
                new org.web3j.abi.datatypes.generated.Uint256(_value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> destroy(String _from, BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DESTROY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_from), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> reserveBalance() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RESERVEBALANCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> issueByBancor(BigInteger _usdt) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ISSUEBYBANCOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_usdt)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> createVote() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEVOTE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> publicizeVote() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PUBLICIZEVOTE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> opposeVote() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_OPPOSEVOTE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> undoOpposeVote() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNDOOPPOSEVOTE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static BancorToken load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new BancorToken(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static BancorToken load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new BancorToken(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static BancorToken load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new BancorToken(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static BancorToken load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new BancorToken(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<BancorToken> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _name, String _symbol, BigInteger _decimals, BigInteger _totalSupply, String _reserveToken, BigInteger _weight) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_symbol), 
                new org.web3j.abi.datatypes.generated.Uint8(_decimals), 
                new org.web3j.abi.datatypes.generated.Uint256(_totalSupply), 
                new org.web3j.abi.datatypes.Address(_reserveToken), 
                new org.web3j.abi.datatypes.generated.Uint32(_weight)));
        return deployRemoteCall(BancorToken.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<BancorToken> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _name, String _symbol, BigInteger _decimals, BigInteger _totalSupply, String _reserveToken, BigInteger _weight) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_symbol), 
                new org.web3j.abi.datatypes.generated.Uint8(_decimals), 
                new org.web3j.abi.datatypes.generated.Uint256(_totalSupply), 
                new org.web3j.abi.datatypes.Address(_reserveToken), 
                new org.web3j.abi.datatypes.generated.Uint32(_weight)));
        return deployRemoteCall(BancorToken.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<BancorToken> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _name, String _symbol, BigInteger _decimals, BigInteger _totalSupply, String _reserveToken, BigInteger _weight) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_symbol), 
                new org.web3j.abi.datatypes.generated.Uint8(_decimals), 
                new org.web3j.abi.datatypes.generated.Uint256(_totalSupply), 
                new org.web3j.abi.datatypes.Address(_reserveToken), 
                new org.web3j.abi.datatypes.generated.Uint32(_weight)));
        return deployRemoteCall(BancorToken.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<BancorToken> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _name, String _symbol, BigInteger _decimals, BigInteger _totalSupply, String _reserveToken, BigInteger _weight) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_symbol), 
                new org.web3j.abi.datatypes.generated.Uint8(_decimals), 
                new org.web3j.abi.datatypes.generated.Uint256(_totalSupply), 
                new org.web3j.abi.datatypes.Address(_reserveToken), 
                new org.web3j.abi.datatypes.generated.Uint32(_weight)));
        return deployRemoteCall(BancorToken.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class ApprovalEventResponse {
        public Log log;

        public String _owner;

        public String _spender;

        public BigInteger _value;
    }

    public static class DestructionEventResponse {
        public Log log;

        public BigInteger _amount;
    }

    public static class IssuanceEventResponse {
        public Log log;

        public BigInteger _amount;
    }

    public static class IssuanceByBancorEventResponse {
        public Log log;

        public String _from;

        public BigInteger _amount;

        public BigInteger _fee;
    }

    public static class OwnerUpdateEventResponse {
        public Log log;

        public String _prevOwner;

        public String _newOwner;
    }

    public static class TransferEventResponse {
        public Log log;

        public String _from;

        public String _to;

        public BigInteger _value;
    }

    public static class VoteCreatedEventResponse {
        public Log log;

        public BigInteger _block;

        public BigInteger _voteId;
    }

    public static class VotePublicizeEventResponse {
        public Log log;

        public BigInteger _block;

        public BigInteger _voteId;

        public Boolean _pass;

        public BigInteger _amount;
    }
}
